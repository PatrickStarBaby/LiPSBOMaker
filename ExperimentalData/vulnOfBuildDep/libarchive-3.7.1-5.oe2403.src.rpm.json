{
  "bomFormat" : "CycloneDX",
  "specVersion" : "1.5",
  "serialNumber" : "urn:uuid:6b83c501-105f-4c3e-a22d-eb6eb7debc10",
  "version" : 1,
  "metadata" : {
    "timestamp" : "2025-02-23T12:42:04Z",
    "tools" : [
      {
        "vendor" : "OWASP",
        "name" : "Dependency-Track",
        "version" : "4.10.1"
      }
    ],
    "component" : {
      "name" : "libarchive-3.7.1-5.oe2403.src.rpm",
      "version" : "SNAPSHOT",
      "externalReferences" : [
        {
          "type" : "website",
          "url" : "https://www.libarchive.org/"
        }
      ],
      "type" : "application",
      "bom-ref" : "bd563082-bb2d-4654-b898-450eb97d4988"
    }
  },
  "components" : [
    {
      "name" : "gcc",
      "version" : "12.3.1",
      "description" : "The gcc package contains the GNU Compiler Collection version 12. You'll need this package in order to compile C code.",
      "licenses" : [
        {
          "license" : {
            "name" : "GPLv3+ and GPLv3+ with exceptions and GPLv2+ with exceptions and LGPLv2+ and BSD"
          }
        }
      ],
      "cpe" : "cpe:2.3:a:*:gcc:12.3.1:*:*:*:*:*:*:*",
      "purl" : "pkg:deb/gcc@12.3.1-38.oe2403?arch=x86_64&upstream=gcc-12.3.1-38.oe2403.src.rpm",
      "externalReferences" : [
        {
          "type" : "website",
          "url" : "https://gcc.gnu.org"
        }
      ],
      "type" : "application",
      "bom-ref" : "f57020e8-6939-46a3-b8e1-ace4816383c9"
    },
    {
      "name" : "libxml2-devel",
      "version" : "2.11.5",
      "description" : "Libraries, include files, etc you can use to develop XML applications. This library allows to manipulate XML files. It includes support to read, modify and write XML and HTML files. There is DTDs support this includes parsing and validation even with complex DtDs, either at parse time or later once the document has been modified. The output can be a simple SAX stream or and in-memory DOM like representations. In this case one can use the built-in XPath and XPointer implementation to select sub nodes or ranges. A flexible Input/Output mechanism is available, with existing HTTP and FTP modules and combined to an URI library.",
      "licenses" : [
        {
          "license" : {
            "name" : "MIT"
          }
        }
      ],
      "cpe" : "cpe:2.3:a:*:libxml2:2.11.5:*:*:*:*:*:*:*",
      "purl" : "pkg:deb/libxml2-devel@2.11.5-4.oe2403?arch=x86_64&upstream=libxml2-2.11.5-4.oe2403.src.rpm",
      "externalReferences" : [
        {
          "type" : "website",
          "url" : "http://xmlsoft.org/"
        }
      ],
      "type" : "application",
      "bom-ref" : "d5ae562f-5d6a-46ff-ab25-5e0c82ffd1a7"
    },
    {
      "name" : "lz4-devel",
      "version" : "1.9.4",
      "description" : "This package contains the header(.h) and library(.so/.a) files required to build applications using liblz4 library.",
      "licenses" : [
        {
          "license" : {
            "name" : "GPLv2+ and BSD"
          }
        }
      ],
      "cpe" : "cpe:2.3:a:*:lz4:1.9.4:*:*:*:*:*:*:*",
      "purl" : "pkg:deb/lz4-devel@1.9.4-2.oe2403?arch=x86_64&upstream=lz4-1.9.4-2.oe2403.src.rpm",
      "externalReferences" : [
        {
          "type" : "website",
          "url" : "https://lz4.github.io/lz4/"
        }
      ],
      "type" : "application",
      "bom-ref" : "6576209e-644f-4374-a98b-574fefb32828"
    },
    {
      "name" : "openssl-devel",
      "version" : "3.0.12",
      "description" : "Development files for openssl.",
      "licenses" : [
        {
          "license" : {
            "name" : "OpenSSL and SSLeay"
          }
        }
      ],
      "cpe" : "cpe:2.3:a:*:openssl:3.0.12:*:*:*:*:*:*:*",
      "purl" : "pkg:deb/openssl-devel@3.0.12-15.oe2403?arch=x86_64&upstream=openssl-3.0.12-15.oe2403.src.rpm",
      "externalReferences" : [
        {
          "type" : "website",
          "url" : "https://www.openssl.org/"
        }
      ],
      "type" : "application",
      "bom-ref" : "12cdbbe7-a169-47ed-a8a5-521be204a6d8"
    },
    {
      "name" : "sharutils",
      "version" : "4.15.2",
      "description" : "This is the set of GNU shar utilities. shar makes shell archives out of many files, preparing them for transmission by electronic mail services. Use unshar to unpack shell archives after reception. uuencode prepares a file for transmission over an electronic channel which ignores or otherwise mangles the eight bit (high order bit) of bytes. uudecode does the converse transformation. remsync allows for remote synchronization of directory trees, using e-mail. This part of sharutils is still alpha.",
      "licenses" : [
        {
          "license" : {
            "name" : "GPLv3+ and (GPLv3+ and BSD) and (LGPLv3+ or BSD) and LGPLv2+ and Public Domain and GFDL"
          }
        }
      ],
      "cpe" : "cpe:2.3:a:*:sharutils:4.15.2:*:*:*:*:*:*:*",
      "purl" : "pkg:deb/sharutils@4.15.2-16.oe2403?arch=x86_64&upstream=sharutils-4.15.2-16.oe2403.src.rpm",
      "externalReferences" : [
        {
          "type" : "website",
          "url" : "http://www.gnu.org/software/sharutils/"
        }
      ],
      "type" : "application",
      "bom-ref" : "fa9fc1b1-b205-40de-8b03-c3b3544066b5"
    },
    {
      "name" : "zlib-devel",
      "version" : "1.2.13",
      "description" : "This package contains the static library, the header files, the tests user case and other development content.",
      "licenses" : [
        {
          "license" : {
            "name" : "zlib and Boost"
          }
        }
      ],
      "cpe" : "cpe:2.3:a:*:zlib:1.2.13:*:*:*:*:*:*:*",
      "purl" : "pkg:deb/zlib-devel@1.2.13-2.oe2403?arch=x86_64&upstream=zlib-1.2.13-2.oe2403.src.rpm",
      "externalReferences" : [
        {
          "type" : "website",
          "url" : "http://www.zlib.net"
        }
      ],
      "type" : "application",
      "bom-ref" : "3986cf72-b173-47fc-9d3a-974f518a5cd7"
    }
  ],
  "dependencies" : [
    {
      "ref" : "bd563082-bb2d-4654-b898-450eb97d4988",
      "dependsOn" : [
        "f57020e8-6939-46a3-b8e1-ace4816383c9",
        "d5ae562f-5d6a-46ff-ab25-5e0c82ffd1a7",
        "6576209e-644f-4374-a98b-574fefb32828",
        "12cdbbe7-a169-47ed-a8a5-521be204a6d8",
        "fa9fc1b1-b205-40de-8b03-c3b3544066b5",
        "3986cf72-b173-47fc-9d3a-974f518a5cd7"
      ]
    },
    {
      "ref" : "f57020e8-6939-46a3-b8e1-ace4816383c9",
      "dependsOn" : [ ]
    },
    {
      "ref" : "d5ae562f-5d6a-46ff-ab25-5e0c82ffd1a7",
      "dependsOn" : [ ]
    },
    {
      "ref" : "6576209e-644f-4374-a98b-574fefb32828",
      "dependsOn" : [ ]
    },
    {
      "ref" : "12cdbbe7-a169-47ed-a8a5-521be204a6d8",
      "dependsOn" : [ ]
    },
    {
      "ref" : "fa9fc1b1-b205-40de-8b03-c3b3544066b5",
      "dependsOn" : [ ]
    },
    {
      "ref" : "3986cf72-b173-47fc-9d3a-974f518a5cd7",
      "dependsOn" : [ ]
    }
  ],
  "vulnerabilities" : [
    {
      "bom-ref" : "b9e737f0-3967-443c-a30d-353e4436f895",
      "id" : "CVE-2023-4039",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 4.8,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N"
        }
      ],
      "description" : "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains that target AArch64 allows an attacker to exploit an existing buffer overflow in dynamically-sized local variables in your application without this being detected. This stack-protector failure only applies to C99-style dynamically-sized local variables or those created using alloca(). The stack-protector operates as intended for statically-sized local variables. The default behavior when the stack-protector detects an overflow is to terminate your application, resulting in controlled loss of availability. An attacker who can exploit a buffer overflow without triggering the stack-protector might be able to change program flow control to cause an uncontrolled loss of availability or to go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
      "published" : "2023-09-13T09:15:00Z",
      "updated" : "2025-02-13T17:17:00Z",
      "affects" : [
        {
          "ref" : "f57020e8-6939-46a3-b8e1-ace4816383c9"
        }
      ]
    },
    {
      "bom-ref" : "a735b870-fe77-4808-a204-aafe1ef87874",
      "id" : "CVE-2024-25062",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.5,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        416
      ],
      "description" : "An issue was discovered in libxml2 before 2.11.7 and 2.12.x before 2.12.5. When using the XML Reader interface with DTD validation and XInclude expansion enabled, processing crafted XML documents can lead to an xmlValidatePopElement use-after-free.",
      "published" : "2024-02-04T16:15:00Z",
      "updated" : "2024-11-21T09:00:00Z",
      "affects" : [
        {
          "ref" : "d5ae562f-5d6a-46ff-ab25-5e0c82ffd1a7"
        }
      ]
    },
    {
      "bom-ref" : "8e6393fe-c25f-4b9f-aa25-cc4b92fa8110",
      "id" : "CVE-2023-45322",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        416
      ],
      "description" : "libxml2 through 2.11.5 has a use-after-free that can only occur after a certain memory allocation fails. This occurs in xmlUnlinkNode in tree.c. NOTE: the vendor's position is \"I don't think these issues are critical enough to warrant a CVE ID ... because an attacker typically can't control when memory allocations fail.\"",
      "published" : "2023-10-06T22:15:00Z",
      "updated" : "2024-11-21T08:26:00Z",
      "affects" : [
        {
          "ref" : "d5ae562f-5d6a-46ff-ab25-5e0c82ffd1a7"
        }
      ]
    },
    {
      "bom-ref" : "8b105f94-2e97-40c0-b049-849dcde26f3d",
      "id" : "CVE-2014-4715",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.0,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:L/Au:N/C:N/I:N/A:P)"
        }
      ],
      "cwes" : [
        189
      ],
      "description" : "Yann Collet LZ4 before r119, when used on certain 32-bit platforms that allocate memory beyond 0x80000000, does not properly detect integer overflows, which allows context-dependent attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via a crafted Literal Run, a different vulnerability than CVE-2014-4611.",
      "published" : "2014-07-03T04:22:00Z",
      "updated" : "2024-11-21T02:10:00Z",
      "affects" : [
        {
          "ref" : "6576209e-644f-4374-a98b-574fefb32828"
        }
      ]
    },
    {
      "bom-ref" : "340b9a57-bcdb-4ac4-a317-83d342c11482",
      "id" : "CVE-2024-0727",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H"
        }
      ],
      "description" : "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL to crash leading to a potential Denial of Service attack Impact summary: Applications loading files in the PKCS12 format from untrusted sources might terminate abruptly. A file in PKCS12 format can contain certificates and keys and may come from an untrusted source. The PKCS12 specification allows certain fields to be NULL, but OpenSSL does not correctly check for this case. This can lead to a NULL pointer dereference that results in OpenSSL crashing. If an application processes PKCS12 files from an untrusted source using the OpenSSL APIs then that application will be vulnerable to this issue. OpenSSL APIs that are vulnerable to this are: PKCS12_parse(), PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes() and PKCS12_newpass(). We have also fixed a similar issue in SMIME_write_PKCS7(). However since this function is related to writing data we do not consider it security significant. The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
      "published" : "2024-01-26T09:15:00Z",
      "updated" : "2024-11-21T08:47:00Z",
      "affects" : [
        {
          "ref" : "12cdbbe7-a169-47ed-a8a5-521be204a6d8"
        }
      ]
    },
    {
      "bom-ref" : "20f576e4-996c-42ef-8a49-f4deddab73ef",
      "id" : "CVE-2023-5678",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.3,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L"
        }
      ],
      "cwes" : [
        754
      ],
      "description" : "Issue summary: Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or parameters may be very slow. Impact summary: Applications that use the functions DH_generate_key() to generate an X9.42 DH key may experience long delays. Likewise, applications that use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check() to check an X9.42 DH key or X9.42 DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. While DH_check() performs all the necessary checks (as of CVE-2023-3817), DH_check_pub_key() doesn't make any of these checks, and is therefore vulnerable for excessively large P and Q parameters. Likewise, while DH_generate_key() performs a check for an excessively large P, it doesn't check for an excessively large Q. An application that calls DH_generate_key() or DH_check_pub_key() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack. DH_generate_key() and DH_check_pub_key() are also called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate(). Also vulnerable are the OpenSSL pkey command line application when using the \"-pubcheck\" option, as well as the OpenSSL genpkey command line application. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
      "published" : "2023-11-06T16:15:00Z",
      "updated" : "2024-11-21T08:42:00Z",
      "affects" : [
        {
          "ref" : "12cdbbe7-a169-47ed-a8a5-521be204a6d8"
        }
      ]
    },
    {
      "bom-ref" : "906fcbca-3672-4200-a40f-12d47dda67ac",
      "id" : "CVE-2023-6129",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:H"
        }
      ],
      "cwes" : [
        787
      ],
      "description" : "Issue summary: The POLY1305 MAC (message authentication code) implementation contains a bug that might corrupt the internal state of applications running on PowerPC CPU based platforms if the CPU provides vector instructions. Impact summary: If an attacker can influence whether the POLY1305 MAC algorithm is used, the application state might be corrupted with various application dependent consequences. The POLY1305 MAC (message authentication code) implementation in OpenSSL for PowerPC CPUs restores the contents of vector registers in a different order than they are saved. Thus the contents of some of these vector registers are corrupted when returning to the caller. The vulnerable code is used only on newer PowerPC processors supporting the PowerISA 2.07 instructions. The consequences of this kind of internal application state corruption can be various - from no consequences, if the calling application does not depend on the contents of non-volatile XMM registers at all, to the worst consequences, where the attacker could get complete control of the application process. However unless the compiler uses the vector registers for storing pointers, the most likely consequence, if any, would be an incorrect result of some application dependent calculations or a crash leading to a denial of service. The POLY1305 MAC algorithm is most frequently used as part of the CHACHA20-POLY1305 AEAD (authenticated encryption with associated data) algorithm. The most common usage of this AEAD cipher is with TLS protocol versions 1.2 and 1.3. If this cipher is enabled on the server a malicious client can influence whether this AEAD cipher is used. This implies that TLS server applications using OpenSSL can be potentially impacted. However we are currently not aware of any concrete application that would be affected by this issue therefore we consider this a Low severity security issue.",
      "published" : "2024-01-09T17:15:00Z",
      "updated" : "2024-11-21T08:43:00Z",
      "affects" : [
        {
          "ref" : "12cdbbe7-a169-47ed-a8a5-521be204a6d8"
        }
      ]
    },
    {
      "bom-ref" : "a7fb507c-5e7a-4b36-8f7c-f8042cb1dabb",
      "id" : "CVE-2018-1000097",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 6.8,
          "severity" : "medium",
          "method" : "CVSSv2",
          "vector" : "(AV:N/AC:M/Au:N/C:P/I:P/A:P)"
        },
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 7.8,
          "severity" : "high",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H"
        }
      ],
      "cwes" : [
        119
      ],
      "description" : "Sharutils sharutils (unshar command) version 4.15.2 contains a Buffer Overflow vulnerability in Affected component on the file unshar.c at line 75, function looks_like_c_code. Failure to perform checking of the buffer containing input line. that can result in Could lead to code execution. This attack appear to be exploitable via Victim have to run unshar command on a specially crafted file..",
      "published" : "2018-03-13T01:29:00Z",
      "updated" : "2024-11-21T03:39:00Z",
      "affects" : [
        {
          "ref" : "fa9fc1b1-b205-40de-8b03-c3b3544066b5"
        }
      ]
    },
    {
      "bom-ref" : "a1cda7a3-f5a6-4bae-b8a5-805623776404",
      "id" : "CVE-2023-6992",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 5.5,
          "severity" : "medium",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H"
        }
      ],
      "cwes" : [
        787
      ],
      "description" : "Cloudflare version of zlib library was found to be vulnerable to memory corruption issues affecting the deflation algorithm implementation (deflate.c). The issues resulted from improper input validation and heap-based buffer overflow. A local attacker could exploit the problem during compression using a crafted malicious file potentially leading to denial of service of the software. Patches: The issue has been patched in commit 8352d10 https://github.com/cloudflare/zlib/commit/8352d108c05db1bdc5ac3bdf834dad641694c13c . The upstream repository is not affected.",
      "published" : "2024-01-04T12:15:00Z",
      "updated" : "2024-11-21T08:44:00Z",
      "affects" : [
        {
          "ref" : "3986cf72-b173-47fc-9d3a-974f518a5cd7"
        }
      ]
    },
    {
      "bom-ref" : "50713749-e17a-4ac4-b4d8-71c3a4b8b188",
      "id" : "CVE-2023-45853",
      "source" : {
        "name" : "NVD",
        "url" : "https://nvd.nist.gov/"
      },
      "ratings" : [
        {
          "source" : {
            "name" : "NVD",
            "url" : "https://nvd.nist.gov/"
          },
          "score" : 9.8,
          "severity" : "critical",
          "method" : "CVSSv3",
          "vector" : "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H"
        }
      ],
      "cwes" : [
        190
      ],
      "description" : "MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.",
      "published" : "2023-10-14T02:15:00Z",
      "updated" : "2024-12-20T17:41:00Z",
      "affects" : [
        {
          "ref" : "3986cf72-b173-47fc-9d3a-974f518a5cd7"
        }
      ]
    }
  ]
}