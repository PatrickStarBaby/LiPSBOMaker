{
  "$schema": "http://cyclonedx.org/schema/bom-1.6.schema.json",
  "bomFormat": "CycloneDX",
  "specVersion": "1.6",
  "serialNumber": "urn:uuid:fa1d2787-82bf-450f-a3a9-9be05d462d40",
  "version": 1,
  "metadata": {
    "timestamp": "2025-03-11T03:20:40Z",
    "lifecycles": [
      {
        "name": "installed",
        "phase": "operations",
        "description": "This is the stage for using the binary after it has been installed locally."
      }
    ],
    "tools": {
      "components": [
        {
          "type": "application",
          "name": "SLP",
          "version": "1.0"
        }
      ]
    },
    "component": {
      "bom-ref": "pkg:rpm/openEuler/libffi@3.4.4-3.oe2403?arch=x86_64&distro=openEuler-24.03&upstream=libffi-3.4.4-3.oe2403.src.rpm&package-id=14a163952cd5701f",
      "type": "application",
      "name": "libffi",
      "version": "3.4.4",
      "description": "\nCompilers for high level languages generate code that follows certain conventions. These\nconventions are necessary, in part, for separate compilation to work. One such convention\nis the \"calling convention\". The \"calling convention\" is a set of assumptions made by the\ncompiler about where function arguments will be found on entry to a function. A \"calling\nconvention\" also specifies where the return value for a function is found.\n\nSome programs may not know at the time of compilation what arguments are to be passed to a\nfunction. For instance, an interpreter may be told at run-time about the number and types\nof arguments used to call a given function. Libffi can be used in such programs to provide\na bridge from the interpreter program to compiled code.\n\nThe libffi library provides a portable, high level programming interface to various calling\nconventions. This allows a programmer to call any function specified by a call interface\ndescription at run-time.\n\nFFI stands for Foreign Function Interface. A foreign function interface is the popular name\nfor the interface that allows code written in one language to call code written in another\nlanguage. The libffi library really only provides the lowest, machine dependent layer of a\nfully featured foreign function interface. A layer must exist above libffi that handles type\nconversions for values passed between the two languages.\n",
      "licenses": [
        {
          "license": {
            "name": "MIT"
          }
        }
      ],
      "cpe": "cpe:2.3:a:*:libffi:3.4.4:*:*:*:*:*:*:*",
      "purl": "pkg:rpm/openEuler/libffi@3.4.4-3.oe2403?arch=x86_64&distro=openEuler-24.03&upstream=libffi-3.4.4-3.oe2403.src.rpm",
      "externalReferences": [
        {
          "url": "http://sourceware.org/libffi",
          "type": "website"
        }
      ],
      "properties": [
        {
          "name": "release",
          "value": "3.oe2403"
        },
        {
          "name": "architecture",
          "value": "x86_64"
        },
        {
          "name": "sourcePkg",
          "value": "libffi-3.4.4-3.oe2403.src.rpm"
        },
        {
          "name": "packager",
          "value": "http://openeuler.org"
        },
        {
          "name": "buildTime",
          "value": "Sun May 19 05:07:59 2024"
        },
        {
          "name": "buildHost",
          "value": "dc-64g.compass-ci"
        }
      ]
    }
  },
  "components": [
    {
      "bom-ref": "pkg:rpm/openEuler/glibc@2.38-47.oe2403?arch=x86_64&distro=openEuler-24.03&upstream=glibc-2.38-47.oe2403.src.rpm&package-id=bb168220de0d4a3f",
      "type": "application",
      "name": "glibc",
      "version": "2.38",
      "description": "\nThe GNU C Library project provides the core libraries for the GNU system and\nGNU/Linux systems, as well as many other systems that use Linux as the kernel.\nThese libraries provide critical APIs including ISO C11, POSIX.1-2008, BSD,\nOS-specific APIs and more. These APIs include such foundational facilities as\nopen, read, write, malloc, printf, getaddrinfo, dlopen, pthread_create, crypt,\n login, exit and more.\n",
      "licenses": [
        {
          "license": {
            "name": "LGPLv2+ and LGPLv2+ with exceptions and GPLv2+ and GPLv2+ with exceptions and BSD and Inner-Net-2.0 and ISC and Public Domain and GFDL-1.3-only"
          }
        }
      ],
      "cpe": "cpe:2.3:a:*:glibc:2.38:*:*:*:*:*:*:*",
      "purl": "pkg:rpm/openEuler/glibc@2.38-47.oe2403?arch=x86_64&distro=openEuler-24.03&upstream=glibc-2.38-47.oe2403.src.rpm",
      "externalReferences": [
        {
          "url": "http://www.gnu.org/software/glibc/",
          "type": "website"
        }
      ],
      "properties": [
        {
          "name": "release",
          "value": "47.oe2403"
        },
        {
          "name": "architecture",
          "value": "x86_64"
        },
        {
          "name": "sourcePkg",
          "value": "glibc-2.38-47.oe2403.src.rpm"
        },
        {
          "name": "packager",
          "value": "http://openeuler.org"
        },
        {
          "name": "buildTime",
          "value": "Wed Dec 11 07:41:52 2024"
        },
        {
          "name": "buildHost",
          "value": "dc-64g.compass-ci"
        },
        {
          "name": "componentType",
          "value": "depend"
        },
        {
          "name": "rpmRequire",
          "value": "libc.so.6()(64bit), libc.so.6(GLIBC_2.14)(64bit), libc.so.6(GLIBC_2.2.5)(64bit), libc.so.6(GLIBC_2.27)(64bit), libc.so.6(GLIBC_2.4)(64bit), libc.so.6(GLIBC_2.7)(64bit), rtld(GNU_HASH)"
        }
      ]
    }
  ],
  "dependencies": [
    {
      "ref": "pkg:rpm/openEuler/libffi@3.4.4-3.oe2403?arch=x86_64&distro=openEuler-24.03&upstream=libffi-3.4.4-3.oe2403.src.rpm&package-id=14a163952cd5701f",
      "dependsOn": [
        "pkg:rpm/openEuler/glibc@2.38-47.oe2403?arch=x86_64&distro=openEuler-24.03&upstream=glibc-2.38-47.oe2403.src.rpm&package-id=bb168220de0d4a3f"
      ]
    }
  ]
}
